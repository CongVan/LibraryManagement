
@{
    ViewBag.Title = "Phân quyền Menu";
}

<div class="row">
    <div class="col-md-6 widget-holder">
        <div class="widget-bg">
            <div class="widget-body clearfix">
                <h5 class="box-title mr-b-0 text-success"><i class="material-icons ">verified_user</i> PHÂN QUYỀN MENU</h5>
                <section class="card">
                    <header class="card-header">
                        <div class="input-group">
                            <select class="form-control" id="lstGroupUser">
                                <option></option>
                            </select>
                        </div>
                    </header>
                    <span class="ml-3 mt-2 text-muted">Danh sách menu hệ thống</span>
                    <!-- /.card-header -->
                    <ul class="list-unstyled widget-user-list card-body custom-scroll-content scrollbar-enabled" id="viewMenusRole"></ul>
                </section>

            </div>
        </div>
    </div>
    <div class="col-md-6 widget-holder">
        <div class="widget-bg">
            <div class="widget-body clearfix" id="viewAddUser">
                <h5 class="box-title mr-b-0 text-success text-uppercase"><i class="material-icons ">group_add</i> Cấp tài khoản thủ thư</h5>
                <form id="frmAddUser" method="post" action="@Url.Action("InsertUser","User")" onsubmit="javascript:;">
                    <div class="form-group row mb-1">
                        <label class="col-md-3 col-form-label pr-0">Tài khoản</label>
                        <div class="col-md-9">
                            <input class="form-control" placeholder="Tên đăng nhập" type="text" name="UserName">
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-md-3 col-form-label pr-0">Mật khẩu</label>
                        <div class="col-md-9 d-flex">
                            <label class="mt-auto">( Sẽ được tạo mặc định ) </label>
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-md-3 col-form-label pr-0">Họ tên</label>
                        <div class="col-md-9">
                            <input class="form-control" placeholder="Họ tên" type="text" name="FullName">
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-md-3 col-form-label pr-0">Email</label>
                        <div class="col-md-9">
                            <input class="form-control" placeholder="Email" type="email" name="Email">
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-md-3 col-form-label pr-0">Số điện thoại</label>
                        <div class="col-md-9">
                            <input class="form-control" placeholder="Số diện thoại" type="text" name="PhoneNumber">
                        </div>
                    </div>
                    <input name="RoleID" type="hidden" value="2" />
                    <div class="form-group row mb-1">
                        <label class="col-md-3 col-form-label pr-0"></label>
                        <div class="col-md-9">
                            <button class="btn btn-success" type="submit"><i class="material-icons list-icon">done</i> Hoàn tất</button>
                            <button class="btn btn-outline-default" type="button" id="btnViewListUser"><i class="material-icons list-icon">group</i>Danh sách thủ thư</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="widget-body clearfix hidden " id="viewListUser">
                <h5 class="box-title mr-b-0 text-success text-uppercase"><i class="material-icons ">group</i> Danh sách thủ thư</h5>
                <button class="btn btn-outline-default" type="button" id="btnAddUser"><i class="material-icons list-icon">group_add</i>Thêm thủ thư</button>
                <table class="table table-responsive table-striped table-bordered mt-2   " id="table-data">
                    <thead>
                        <tr class="bg-success text-white ">
                            <th>STT</th>
                            <th>Tài khoản</th>
                            <th>Họ tên</th>
                            @*<th>Email</th>*@
                            <th>SDT</th>
                            <th>Xóa</th>
                        </tr>
                    </thead>

                </table>
            </div>
        </div>
    </div>
</div>

@section js{
    <script id="template-list-menu" type="text/x-handlebars-template">
        {{#each menus}}
        <li class="media">
            <div class="d-flex mr-3">
                {{#if Flag}}
                <a href="#" class="user--online thumb-xs">
                    <i class="material-icons">{{Icon}}</i>
                </a>
                {{else}}
                <a href="#" class="user--offline thumb-xs">
                    <i class="material-icons">{{Icon}}</i>
                </a>
                {{/if}}
            </div>
            <div class="media-body">
                {{#if IsGranted}}
                <a href="javacript:;" class="btn btn-outline-danger btn-sm px-2 btnDenied" data-id="{{IDMenu}}" data-title="{{TitleMenu}}"><i class="material-icons list-icon">close</i>Hủy Quyền</a>
                {{else}}
                <a href="javacript:;" class="btn btn-success btn-sm px-2 btnApprove" data-id="{{IDMenu}}" data-title="{{TitleMenu}}"><i class="material-icons list-icon">done</i> Cấp quyền</a>
                {{/if}}
                <h5 class="media-heading"><a href="javascript:;">{{TitleMenu}}</a></h5>
            </div>
        </li>
        {{/each}}
    </script>
    <script id="template-action-table" type="text/x-handlebars-template">
        @*<a href="javascript: void(0);" data-id="{{id}}"
               data-toggle="modal" data-target=".bs-modal-sm-color-scheme"
               class="color-info mr-2 btn-edit-click" title="Cập nhật tủ sách">
                <i class="material-icons">edit</i>
            </a>*@
        <a href="javascript: void(0); " data-id="{{id}}"
           class="color-danger del-submit" title="Xóa tài khoản">
            <i class="material-icons">delete_forever</i>
        </a>
    </script>
    <script>
        var fn = {
            init: function () {
                this.loadListGroupUser();
                this.registerHanderBar();
                this.handleChangeListUser();
                this.handleApprove();
                this.handleDenied();
                //this.frmInsertHandleSubmit();
                this.validate();
                this.btnViewListUserClick();
                this.btnAddUserClick();
                this.loadDataTable();
                //this.loadListMenuRole();
                this.handleDeleteUser();
                
            },
            loadListGroupUser: function () {
                $.getJSON('/Admin/GetListGroupUser')
                    .then(function (result) {
                        $('#lstGroupUser').select2({
                            placeholder: 'Chọn nhóm người dùng',
                            data: result,
                            minimumResultsForSearch: -1

                        });
                    }).catch(function (error) {
                        console.log(error);
                    });
            },
            handleChangeListUser: function () {
                var self = this;
                $('#lstGroupUser').on('change', function () {
                    self.loadListMenuRole();
                });
            },
            handleApprove: function () {
                var self = this;
                $('#viewMenusRole').on('click', '.btnApprove', function () {
                    var idMenu = $(this).data('id');
                    var idGroup = $('#lstGroupUser').val();
                    var nameGroup = $('#lstGroupUser').select2('data')[0].text;
                    var menu = $(this).data('title');
                    swal({
                        title: 'XÁC NHẬN?',
                        text: `Bạn có chắc chắn muốn cấp quyền Menu: ${menu} cho nhóm ${nameGroup}!`,
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonClass: 'btn btn-success',
                        confirmButtonText: 'Xác nhận',
                        cancelButtonText: "Đóng",
                    }).then((result) => {
                        if (result.value) {
                            $.ajax({
                                type: 'post',
                                url: '/Admin/ApproveMenuRole',
                                data: {
                                    idMenu: idMenu,
                                    idGroup: idGroup
                                }
                            }).done(function (result) {
                                if (result.data == 1) {
                                    swal('Thành công', '', 'success');
                                    self.loadListMenuRole();
                                } else {
                                    swal('Thất bại', result.msg, 'error');
                                }
                            }).fail(function (x, t, e) {
                                console.log(e);
                            });
                        }

                    });

                });
            },
            handleDenied: function () {
                var self = this;
                $('#viewMenusRole').on('click', '.btnDenied', function () {
                    var nameGroup = $('#lstGroupUser').select2('data')[0].text;
                    var menu = $(this).data('title');
                    var idMenu = $(this).data('id');
                    var idGroup = $('#lstGroupUser').val();
                    swal({
                        title: 'XÁC NHẬN?',
                        text: `Bạn có chắc chắn muốn hủy quyền Menu: ${menu} của nhóm ${nameGroup}!`,
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonClass: 'btn btn-danger',
                        confirmButtonText: 'Xác nhận',
                        cancelButtonText: "Đóng",
                    }).then((result) => {
                        if (result.value) {
                            $.ajax({
                                type: 'post',
                                url: '/Admin/DenyMenuRole',
                                data: {
                                    idMenu: idMenu,
                                    idGroup: idGroup
                                }
                            }).done(function (result) {
                                if (result.data == 1) {
                                    swal('Thành công', '', 'success');
                                    self.loadListMenuRole();
                                } else {
                                    swal('Thất bại', result.msg, 'error');
                                }
                            }).fail(function (x, t, e) {
                                console.log(e);
                            });
                        }

                    });
                });
            },
            frmInsertHandleSubmit: function () {
                var self = this;
                //$('#frmAddUser').on('submit', function (e) {
                //    e.preventDefault();
                swal({
                    title: 'XÁC NHẬN?',
                    text: `Xác nhận cấp tài khoản thủ thư`,
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonClass: 'btn btn-danger',
                    confirmButtonText: 'Xác nhận',
                    cancelButtonText: "Đóng",
                }).then((result) => {
                    if (result.value) {
                        const data = $('#frmAddUser').serialize();
                        //var formData = new URLSearchParams(new FormData())
                        var url = $('#frmAddUser').attr('action');

                        $.ajax({
                            url: url,
                            type: 'post',
                            data: data

                        }).done((data) => {
                            if (data === 1) {
                                swal(
                                    'Thành công!',
                                    '',
                                    'success'
                                );
                                self.resetFormInsert();
                            }
                        }).catch((e) => {
                            swal(
                                'Thất bại!',
                                e,
                                'error'
                            )
                        });
                    }
                });
                //});
            },
            resetFormInsert: function () {
                $('#frmAddUser').find('input').removeClass('is-invalid').removeClass('is-valid').val('');
                $('#frmAddUser').find('div .invalid-feedback').empty();
            },
            validate: () => {
                jQuery.validator.addMethod("noSpace", function (value, element) {
                    return value.indexOf(" ") < 0 && value != "";
                }, "Giá trị không hợp lệ (có khoảng trắng)");
                //$('form').each(function () {
                $('#frmAddUser').validate({
                    errorClass: 'invalid-feedback',
                    rules: {
                        UserName: {
                            required: true,
                            minlength: 5,
                            noSpace: true,
                        },
                        FullName: {
                            required: true,
                            minlength: 10
                        },
                        Email: {
                            email: true,
                            required: true
                        },
                        PhoneNumber: {
                            required: true,
                        },
                    },
                    messages: {

                        UserName: {
                            required: "Vui lòng nhập tài khoản!",
                            minlength: "Tài khoản tối thiểu 5 ký tự!"
                        },
                        FullName: {
                            required: "Vui lòng nhập họ tên!",
                            minlength: "Họ tên tối thiểu 10 ký tự!",
                        },
                        Email: {
                            required: "Vui lòng nhập Email!",
                            email: "Email không đúng định dạng!",
                        },
                        PhoneNumber: {
                            required: "Vui lòng nhập số điện thoại!",
                        },

                    },
                    //errorElement: 'label',
                    errorLabelContainer: '.invalid-feedback',

                    highlight: function (element, errorClass, validClass) {
                        if (element.type == "select") {
                            this.findByName(element.name).addClass(errorClass).removeClass(validClass);
                        } else {
                            $(element).closest('.form-group').find('input').removeClass('is-valid').addClass('is-invalid');
                        }
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        if (element.type == "select") {
                            this.findByName(element.name).removeClass(errorClass).addClass(validClass);
                        } else {
                            $(element).closest('.form-group').find('input').removeClass('is-invalid').addClass('is-valid');
                        }
                    },
                    submitHandler: function (form) {

                        fn.frmInsertHandleSubmit();
                    }
                    //});
                });
            },
            btnViewListUserClick: function () {
                $('#btnViewListUser').on('click', function () {
                    $('#table-data').DataTable().ajax.reload().draw();
                    $('#viewAddUser').addClass('hidden ');
                    $('#viewListUser').removeClass('hidden ');
                });
            },
            btnAddUserClick: function () {
                $('#btnAddUser').on('click', function () {
                    //$('#table-data').DataTable().ajax.reload().draw();
                    $('#viewAddUser').removeClass('hidden ');
                    $('#viewListUser').addClass('hidden ');
                });
            },
            loadDataTable: function () {
                $('#table-data').DataTable({
                    scrollY: '16em',
                    dom: 'rt<"bottom"flpi><"clear">',
                    scrollCollapse: true,
                    searching: false,
                    ordering: false,
                    info: false,
                    ajax: {
                        url: "/User/LoadAllUser?type=2",
                        "dataSrc": function (data) {
                            // manipulate your data (json)
                            //console.log(JSON.parse(data.result));

                            // return the data that DataTables is to use to draw the table
                            return data;
                        }
                    },
                    columns: [
                        {
                            "data": null,
                            'defaultContent': '',
                            render: function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },

                        { "data": "UserName" },
                        { "data": "FullName" },
                        //{ "data": "Email" },
                        //{
                        //    "data": "Flag",
                        //    render: function (data, type, row) {
                        //        return data ? `<span class="badge text-uppercase badge-success align-middle py-2">Hoạt động</span>` :
                        //            `<span class="badge text-uppercase badge-danger align-middle py-2">Đã hủy</span>`;
                        //    }
                        //},
                        {
                            "data": "PhoneNumber",
                            //render: function (data, type, row) {
                            //    var html = "";
                            //    switch (data) {
                            //        case 1: html = '<span class="badge text-uppercase badge-info align-middle py-2">Bình thường</span>'; break;
                            //        case 2: html = '<span class="badge text-uppercase badge-success align-middle py-2">Cảnh cáo</span>'; break;
                            //        case 3: html = '<span class="badge text-uppercase badge-danger align-middle py-2">Hủy</span>'; break;
                            //    }
                            //    return html;
                            //}
                        },
                        {
                            "data": "ID",
                            render: function (data, type, row) {
                                var source = document.getElementById("template-action-table").innerHTML;
                                var template = Handlebars.compile(source);
                                var context = { id: data };
                                var html = template(context);
                                return html;
                            }
                        }
                    ]
                });
            },
            handleDeleteUser: function () {
                $('#table-data').on('click', '.del-submit', function () {
                    var id = $(this).data('id');
                    swal({
                        title: 'XÁC NHẬN?',
                        text: "Bạn có chắc chắn muốn xóa thủ thư này!",
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonClass: 'btn btn-danger',
                        confirmButtonText: 'Xác nhận',
                        cancelButtonText: "Đóng",
                    }).then((result) => {
                        if (result.value) {
                            $.ajax(
                                {
                                    url: "/User/DeleteUser",
                                    type: 'post',
                                    data: { id: id }
                                })
                                .done(data => {
                                    if (data == 1) {
                                        $('#table-data').DataTable().ajax.reload().draw();
                                        swal(
                                            'Thành công!',
                                            '',
                                            'success'
                                        )
                                    } else {
                                        swal(
                                            'Thất bại!',
                                            data,
                                            'error'
                                        )
                                    }

                                }).fail((error) => {
                                    console.log(`Error:${error.messages}`);
                                });

                        } 
                    });
                });
            },
            registerHanderBar: function () {
                Handlebars.registerHelper('ifvalue', function (conditional, options) {
                    if (conditional == options.hash.equals) {
                        return options.fn(this);
                    } else {
                        return options.inverse(this);
                    }
                });
            },
            loadListMenuRole: function () {
                var id = $("#lstGroupUser").val();
                $.getJSON('/Admin/GetListRoleMenu?idRole=' + id)
                    .then(function (result) {
                        var source = document.getElementById("template-list-menu").innerHTML;
                        var template = Handlebars.compile(source);
                        var context = { menus: result };
                        var html = template(context);
                        $('#viewMenusRole').html(html);
                    }).catch(function (error) {
                        console.log(error);
                    });
            }
        }


        $(document).ready(function () {
            fn.init();

        });

    </script>
}