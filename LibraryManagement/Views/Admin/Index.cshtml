
@{
    //Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Trang Admin";
}
@section css{
    <style>
        body {
            padding-right: 0 !important;
        }

        td.details-control {
            background: url('https://cdn.rawgit.com/DataTables/DataTables/6c7ada53ebc228ea9bc28b1b216e793b1825d188/examples/resources/details_open.png') no-repeat center center;
            cursor: pointer;
        }

        tr.shown td.details-control {
            background: url('https://cdn.rawgit.com/DataTables/DataTables/6c7ada53ebc228ea9bc28b1b216e793b1825d188/examples/resources/details_close.png') no-repeat center center;
        }

        .expand-content {
            cursor: pointer;
        }
    </style>

}
<div class="row">
    <div class="col-md-4 mr-b-20">
        <div class="card card-expandable bg-white card-expanded">
            <div class="card-header border-bottom-1 pb-2">
                <h5 class="card-title mt-3 fs-15">Thêm Menu hệ thống</h5>  <i class="material-icons list-icon ripple">keyboard_arrow_down</i>
            </div>
            <form id="frm-insert-menu" method="post" action="@Url.Action("InsertMenu","Admin")">
                <div class="card-body pt-2">
                    <div class="form-group">
                        <label class="form-control-label">Menu Cha</label>
                        <select class="form-control parent-id" name="ParentID">
                            <option value="-1">Không chọn</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="titleMenu">Tên Menu</label>
                        <input type="text" class="form-control " name="Title" id="titleMenu" placeholder="Nhập tên Menu...">
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                        <label for="priorityMenu">Thứ tự</label>
                        <input type="number" class="form-control" min="1" name="Priority" id="priorityMenu" placeholder="Nhập thứ tự Menu...">
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                        <label for="iconMenu">Icon</label>
                        <select class="form-control lst-icon-m" name="selectIcon" id="iconMenu"></select>
                        <input class="form-control " name="Icon" id="iconMenu" type="hidden">
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                        <label for="pathMenu">Đường dẫn</label>
                        <input type="text" class="form-control " name="Path" id="pathMenu" placeholder="Nhập đường dẫn Menu...">
                        <div class="invalid-feedback"></div>
                    </div>
                </div>
                <div class="card-action pb-0">
                    <div class=" btn-list">
                        <button type="submit" class="btn btn-success">
                            <i class="material-icons ">done</i>&nbsp;Hoàn tất
                        </button>
                        @*<button type="button" class="btn btn-default" id="btn-close-insert">
                                <i class="material-icons list-icon">close</i>&nbsp;Đóng
                            </button>*@
                    </div>
                </div>
            </form>
        </div>
    </div>


    <div class="col-md-8 widget-holder">

        <div class="widget-bg">
            <div class="widget-body clearfix">
                <table class="table table-hover " id="table-data">
                    <thead>
                        <tr class="bg-success">
                            <th>&nbsp;</th>
                            <th>Tên Menu</th>
                            <th>Thứ tự</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                  
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal modal-color-scheme fade bs-modal-sm-color-scheme" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" aria-hidden="true" style="display: none">
    <div class="modal-dialog modal-md">
        <div class="modal-content">
            <div class="modal-header text-inverse">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h5 class="modal-title" id="mySmallModalLabel">Cập Nhật Menu Sách</h5>
            </div>
            <div class="modal-body">
                <form id="frm-update-menu" action="@Url.Action("UpdateMenu","Admin")" method="post">
                    <input type="hidden" name="ID" value="" />
                    <div class="form-group">
                        <label class="form-control-label">Menu Cha</label>
                        <select class="form-control parent-id" name="ParentID">
                            <option value="-1">Không chọn</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="titleMenu">Tên Menu</label>
                        <input type="text" class="form-control " name="Title" id="titleMenu" placeholder="Nhập tên Menu...">
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                        <label for="priorityMenu">Thứ tự</label>
                        <input type="number" class="form-control" min="1" name="Priority" id="priorityMenu" placeholder="Nhập thứ tự Menu...">
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                        <label for="iconMenu">Icon</label>
                        <select class="form-control lst-icon-m " name="selectIcon" id="iconMenu"></select>
                        <input class="form-control " name="Icon" id="iconMenu" type="hidden">
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                        <label for="pathMenu">Đường dẫn</label>
                        <input type="text" class="form-control " name="Path" id="pathMenu" placeholder="Nhập đường dẫn Menu...">
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-group">
                        <label for="visiblesMenu">Ẩn/ Hiện</label>
                        <select class="form-control " name="Visible" id="visiblesMenu">
                            <option value="true">Hiện</option>
                            <option value="false">Ẩn</option>
                        </select>
                        <div class="invalid-feedback"></div>
                    </div>
                    <div class="form-actions">
                        <div class="form-group">
                            <div class="row">
                                <div class="col-md-12 error-area">

                                </div>
                                <div class="col-sm-12 btn-list d-flex justify-content-end">
                                    <button type="submit" class="btn btn-success">
                                        <i class="material-icons list-icon">check</i>&nbsp; Hoàn tất
                                    </button>
                                    <button type="button" class="btn btn-default" id="btnTest" data-dismiss="modal">
                                        <i class="material-icons list-icon">close</i>&nbsp;Đóng
                                    </button>
                                </div>

                            </div>

                        </div>
                    </div>
                </form>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section js{
    <script id="template-action-table" type="text/x-handlebars-template">
        <a href="javascript: void(0);" data-id="{{id}}"
           data-toggle="modal" data-target=".bs-modal-sm-color-scheme"
           class="color-info mr-2 btn-edit-click" title="Cập nhật tủ sách">
            <i class="material-icons">edit</i>
        </a>
        <a href="javascript: void(0); " data-id="{{id}}"
           class="color-danger del-submit" title="Xóa tủ sách">
            <i class="material-icons">delete_forever</i>
        </a>
    </script>
    <script id="template-expand-detail" type="text/x-handlebars-template">
        <div class="container " id="container-expand-{{pID}}" style="max-height:255px">
            <div class="row">
                {{#each categories}}
                <div class="col-md-3 mr-2 mb-1 bg-white p-3 rounded">
                    <div class="form-group row mb-1">
                        <label class="col-md-4  pr-0">Tên</label>
                        <div class="col-md-5">
                            <label><strong>{{Title}}</strong></label>
                        </div>
                    </div>
                    <div class="form-group row mb-1">
                        <label class="col-md-4  pr-0">Trạng thái</label>
                        <div class="col-md-5">
                            {{#if Flag}}
                            <span class="badge text-uppercase badge-success align-middle py-2">Hiện</span>
                            {{else}}
                            <span class="badge text-uppercase badge-danger align-middle py-2">Ẩn</span>
                            {{/if}}
                        </div>
                    </div>
                    <div class="form-group row mb-0">
                        <label class="col-md-4 pr-0">Thao tác</label>
                        <div class="col-md-5">
                            <a href="javascript: void(0);" data-id="{{ID}}"
                               data-toggle="modal" data-target=".bs-modal-sm-color-scheme" data-parentid="{{ParentID}}"
                               class="color-info mr-2 btn-edit-click" title="Cập nhật Menu">
                                <i class="material-icons">edit</i>
                            </a>
                            <a href="javascript: void(0); " data-id="{{ID}}" data-parentid="{{ParentID}}"
                               class="color-danger del-submit" title="Xóa Menu">
                                <i class="material-icons">delete_forever</i>
                            </a>
                        </div>
                    </div>
                </div>
                {{/each}}

            </div>
        </div>




    </script>
    <script>
        var _dataIcons=[]
        function formatState(icon) {
            var originalOption = icon.element;
            return $('<span><i class=" ' + icon.code + ' mr-2">' + icon.text +'</i>   ' + icon.text + '</span>');
        }
        function loadIcon() {
           
            $.get('/Admin/GetIcons')
                .then((result) => {
                    //console.log(result);
                    $('.lst-icon-m').select2({
                        //placeholder: {
                        //    id: '', text: 'Chọn icon Menu'
                        //},
                        data: result,
                        templateResult: formatState,
                        allowHtml: true,
                        templateSelection: formatState,
                        
                    });
                    _dataIcons = result;
                }).then(function () {
                    $('#frm-insert-menu select[name="selectIcon"]').on('select2:select', function (e) {
                        var data = e.params.data;
                        $('#frm-insert-menu input[name="Icon"]').val(data.text);
                        //console.log(data);
                    });
                    $('#frm-update-menu select[name="selectIcon"]').on('select2:select', function (e) {
                        var data = e.params.data;
                        $('#frm-update-menu input[name="Icon"]').val(data.text);
                        //console.log(data);
                    });
                });
        }
        $(document).ready(function () {
            loadTable();
            loadIcon();
           
            //$('#frm-insert-menu select[name="selectIcon"]').on('change', function () {
            //    var data = $('#frm-insert-menu select[name="selectIcon"]').select2('data');
            //    if (data) {
            //        $('#frm-insert-menu select[name="Icon"]').val(data.text);
            //    }
            //});
            $('form').each(function () {
                $(this).validate({
                    errorClass: 'invalid-feedback',
                    rules: {
                        Title: {
                            required: true
                        },
                        Priority: {
                            required: true
                        },
                        Icon: {
                            required: true
                        },
                        Path: {
                            required: true
                        },
                    },
                    messages: {
                        Title: {
                            required: "Vui lòng nhập tên Menu!"
                        },
                        Priority: {
                            required: "Vui lòng thứ tự Menu!"
                        },
                        Icon: {
                            required: "Vui lòng nhập icon Menu!"

                        },
                        Path: {
                            required: "Vui lòng nhập đường dẫn Menu!"
                        },
                    },
                    //errorElement: 'div',
                    //errorLabelContainer: '.invalid-feedback',
                    errorPlacement: function (error, element) {
                        $(element).next('div').html(error);
                    },
                    highlight: function (element, errorClass, validClass) {
                        if (element.type == "radio") {
                            this.findByName(element.name).addClass(errorClass).removeClass(validClass);
                        } else {
                            $(element).closest('.form-group').find('input').removeClass('is-valid').addClass('is-invalid');
                        }
                    },
                    unhighlight: function (element, errorClass, validClass) {
                        if (element.type == "radio") {
                            this.findByName(element.name).removeClass(errorClass).addClass(validClass);
                        } else {
                            $(element).closest('.form-group').find('input').removeClass('is-invalid').addClass('is-valid');
                        }
                    },
                    submitHandler: function (form) {
                        form.submit();
                    }
                });
            });
            
            $('.expand-table').on('click', function () {
                var id = $(this).data('id');
                var el = $('#table-data tbody').find('tr[data-parentid="' + id + '"]')
                if (el.hasClass('hidden')) {
                    el.removeClass('hidden');
                } else {
                    el.addClass('hidden');
                }
            });

            $.getJSON("/Admin/GetMenusParent")
                //.then(res => res.json())
                .then(data => {
                    var html = "<option value='-1'>Không chọn</option> ";
                    $.each(data, (i, e) => {
                        html += "<option value='" + e.ID + "'>"+ e.Title + "</option>"
                    });
                    $('.parent-id').html(html);
                    //$("#frm-insert-category").find('select[name="ParentID "]').append(html);
                });


            if('@Html.Raw(Json.Encode(ViewBag.msgSuccess))'!= 'null') {
                @*$.toast({
                    heading: 'THÔNG BÁO: ',
                    text: @Html.Raw(Json.Encode(ViewBag.msgSuccess)),
                    position: 'top-right',
                    icon: 'success',
                    stack: false
                });*@
                swal(
                    'Thành công!',
                    '',
                    'success'
                );
            }
            if ('@Html.Raw(Json.Encode(ViewBag.msgError))' != 'null') {
                swal(
                    'Thất bại!',
                    '@Html.Raw(Json.Encode(ViewBag.msgError))',
                    'error'
                );
                @*$.toast({
                    heading: 'THÔNG BÁO: ',
                    text: @Html.Raw(Json.Encode(ViewBag.msgError)),
                    position: 'top-right',
                    icon: 'error',
                    stack: false
                });*@
            }
            $('#table-data').on('click','.del-submit' ,function () {
                var id = $(this).data('id');
                var parentId = $(this).data('parentid');
                swal({
                    title: 'XÁC NHẬN?',
                    text: "Bạn có chắc chắn muốn xóa Menu này!",
                    type: 'warning',
                    showCancelButton: true,
                    confirmButtonClass: 'btn btn-danger',
                    confirmButtonText: 'Xác nhận',
                    cancelButtonText: "Đóng",
                }).then((result) => {
                    if (result.value) {
                        var id = $(this).data('id');
                        var url = "/Admin/DeleteMenu"
                        fetch(url, {
                            method: 'post',
                            headers: {
                                'Accept': 'application/json, text/plain, */*',
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ id: id })
                        }).then(res => res.json())
                            .then(data => {
                                if (data.result === 1) {
                                    $('#tb-row-' + id).hide().remove();
                                    swal(
                                        'Thành công!',
                                        '',
                                        'success'
                                    )
                                    $('#table-data').DataTable().ajax.reload().draw();
                                } else {
                                    swal(
                                        'Thất bại!',
                                        data.msg,
                                        'error'
                                    )
                                }
                            }).catch((error) => {
                                console.log(`Error:${error.messages}`);
                            });

                    } else if (result.dismiss === "cancel") {

                    }
                });
            });

            $('#table-data').on('click', '.btn-edit-click',function () {
                $('#frm-update-menu').find('input').removeClass('is-invalid').removeClass('is-valid');
                $('#frm-update-menu').find('div .invalid-feedback').empty();
                var id = $(this).data('id');

                var url = '/Admin/GetMenu?' + $.param({ "id": id });
                $.getJSON(url)
                    .then((data) => {
                        //console.log(data);
                        if (!data) {
                            return;
                        }
                        $('#frm-update-menu select[name="ParentID"]').val(data.ParentID==null?-1:data.ParentID);
                        $('#frm-update-menu input[name="Title"]').val(data.Title);
                        $('#frm-update-menu input[name="ID"]').val(data.ID);
                        $('#frm-update-menu input[name="Priority"]').val(data.Priority);
                        var idIcon = _dataIcons.filter((i, n) => {
                            return i.text == data.Icon;
                        });
                        if (idIcon.length > 0) {
                            $('#frm-update-menu select[name="selectIcon"]').val(idIcon[0].id).trigger('change');
                        }
                        
                        $('#frm-update-menu input[name="Icon"]').val(data.Icon);
                        $('#frm-update-menu input[name="Path"]').val(data.Path);
                        $('#frm-update-menu input[name="Flag"]').val(data.Flag);
                        $('#frm-update-menu select[name="Visible"]').val(data.Visible.toString());
                        //var check = $('#frm-update-menu input[name="status"]').is(':checked');
                        //if (data.Flag == true && check == false || (data.Flag == false && check == true)) {
                        //    //$('#frmUpdatePublisher input[name="status"]').prop('checked', true);
                        //    $('#frm-update-menu input[name="status"]').trigger('click');
                        //}
                    }).catch((error) => {
                        console.log(`Error:${error.messages}`);

                    });
            });
            $('#frm-update-menu input[name="status"]').on('change', function (event) {
                $('#frm-update-menu input[name="Flag"]').val($(this).is(':checked') ? "true" : "false");
                //console.log($(this));
            });
            $('#table-data tbody').on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = $('#table-data').DataTable().row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                } else {
                    // Open this row
                    var d = row.data();
                    var url = `/Admin/GetMenusChildren?id=${d.ID}`;
                    $.getJSON(url, function (data) {
                        var source = document.getElementById("template-expand-detail").innerHTML;
                        var template = Handlebars.compile(source);
                        var context = { categories: data, pID: d.ID };
                        console.log(context);
                        var html = template(context);
                        row.child(html).show();
                        tr.addClass('shown');
                        $(`#container-expand-${d.ID}`).closest('td').css('background-color', '#eee').css('overflow', 'auto');
                    });

                    //format(row.data()).then((html) => {

                    //});


                }
            });
        });
        function loadTable() {
            $('#table-data').DataTable({
                //data: lst,
                searching: false,
                ordering: false,
                ajax: {
                    url: "/Admin/GetMenusParent",
                    "dataSrc": function (data) {
                        // manipulate your data (json)
                        //console.log(JSON.parse(data.result));

                        // return the data that DataTables is to use to draw the table
                        return data;
                    }
                },
                columns: [
                    {
                        'className': 'details-control',
                        'orderable': false,
                        'data': 'HasChild',
                        'defaultContent': '',
                        createdCell: function (td, cellData, rowData, row, col) {
                            if (!cellData) {
                                $(td).removeClass('details-control');
                            } else {
                                return '';
                            }
                        },
                        render: function (data, type, row) {

                            return '';
                        }
                    },
                    
                    { "data": "Title" },
                    { "data": "Priority" },
                    {
                        "data": "Visible",
                        render: function (data, type, row) {
                            return data ? `<span class="badge text-uppercase badge-success align-middle py-2">Hiện</span>` :
                                `<span class="badge text-uppercase badge-danger align-middle py-2">Ẩn</span>`;
                        }
                    },
                    {
                        "data": "ID",
                        render: function (data, type, row) {
                            var source = document.getElementById("template-action-table").innerHTML;
                            var template = Handlebars.compile(source);
                            var context = { id: data };
                            var html = template(context);
                            return html;
                        }
                    }
                ]
            });
        }

    </script>


}
